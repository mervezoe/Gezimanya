/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftFlattenedEsObject.h"

#import "ThriftPluginRequest.h"


@implementation ThriftPluginRequestConstants
+ (void) initialize {
}
@end

@implementation ThriftPluginRequest

- (id) initWithPluginName: (NSString *) pluginName zoneId: (int32_t) zoneId roomId: (int32_t) roomId sessionKey: (int32_t) sessionKey parameters: (ThriftFlattenedEsObject *) parameters
{
  self = [super init];
  __pluginName = [pluginName retain];
  __pluginName_isset = YES;
  __zoneId = zoneId;
  __zoneId_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __sessionKey = sessionKey;
  __sessionKey_isset = YES;
  __parameters = [parameters retain];
  __parameters_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"pluginName"])
  {
    __pluginName = [[decoder decodeObjectForKey: @"pluginName"] retain];
    __pluginName_isset = YES;
  }
  if ([decoder containsValueForKey: @"zoneId"])
  {
    __zoneId = [decoder decodeInt32ForKey: @"zoneId"];
    __zoneId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"sessionKey"])
  {
    __sessionKey = [decoder decodeInt32ForKey: @"sessionKey"];
    __sessionKey_isset = YES;
  }
  if ([decoder containsValueForKey: @"parameters"])
  {
    __parameters = [[decoder decodeObjectForKey: @"parameters"] retain];
    __parameters_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__pluginName_isset)
  {
    [encoder encodeObject: __pluginName forKey: @"pluginName"];
  }
  if (__zoneId_isset)
  {
    [encoder encodeInt32: __zoneId forKey: @"zoneId"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__sessionKey_isset)
  {
    [encoder encodeInt32: __sessionKey forKey: @"sessionKey"];
  }
  if (__parameters_isset)
  {
    [encoder encodeObject: __parameters forKey: @"parameters"];
  }
}

- (void) dealloc
{
  [__pluginName release];
  [__parameters release];
  [super dealloc];
}

- (NSString *) pluginName {
  return [[__pluginName retain] autorelease];
}

- (void) setPluginName: (NSString *) pluginName {
  [pluginName retain];
  [__pluginName release];
  __pluginName = pluginName;
  __pluginName_isset = YES;
}

- (BOOL) pluginNameIsSet {
  return __pluginName_isset;
}

- (void) unsetPluginName {
  [__pluginName release];
  __pluginName = nil;
  __pluginName_isset = NO;
}

- (int32_t) zoneId {
  return __zoneId;
}

- (void) setZoneId: (int32_t) zoneId {
  __zoneId = zoneId;
  __zoneId_isset = YES;
}

- (BOOL) zoneIdIsSet {
  return __zoneId_isset;
}

- (void) unsetZoneId {
  __zoneId_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (int32_t) sessionKey {
  return __sessionKey;
}

- (void) setSessionKey: (int32_t) sessionKey {
  __sessionKey = sessionKey;
  __sessionKey_isset = YES;
}

- (BOOL) sessionKeyIsSet {
  return __sessionKey_isset;
}

- (void) unsetSessionKey {
  __sessionKey_isset = NO;
}

- (ThriftFlattenedEsObject *) parameters {
  return [[__parameters retain] autorelease];
}

- (void) setParameters: (ThriftFlattenedEsObject *) parameters {
  [parameters retain];
  [__parameters release];
  __parameters = parameters;
  __parameters_isset = YES;
}

- (BOOL) parametersIsSet {
  return __parameters_isset;
}

- (void) unsetParameters {
  [__parameters release];
  __parameters = nil;
  __parameters_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setPluginName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setZoneId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setSessionKey: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_STRUCT) {
          ThriftFlattenedEsObject *fieldValue = [[ThriftFlattenedEsObject alloc] init];
          [fieldValue read: inProtocol];
          [self setParameters: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftPluginRequest"];
  if (__pluginName_isset) {
    if (__pluginName != nil) {
      [outProtocol writeFieldBeginWithName: @"pluginName" type: TType_STRING fieldID: 1];
      [outProtocol writeString: __pluginName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__zoneId_isset) {
    [outProtocol writeFieldBeginWithName: @"zoneId" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __zoneId];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__sessionKey_isset) {
    [outProtocol writeFieldBeginWithName: @"sessionKey" type: TType_I32 fieldID: 4];
    [outProtocol writeI32: __sessionKey];
    [outProtocol writeFieldEnd];
  }
  if (__parameters_isset) {
    if (__parameters != nil) {
      [outProtocol writeFieldBeginWithName: @"parameters" type: TType_STRUCT fieldID: 5];
      [__parameters write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftPluginRequest("];
  [ms appendString: @"pluginName:"];
  [ms appendFormat: @"\"%@\"", __pluginName];
  [ms appendString: @",zoneId:"];
  [ms appendFormat: @"%i", __zoneId];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",sessionKey:"];
  [ms appendFormat: @"%i", __sessionKey];
  [ms appendString: @",parameters:"];
  [ms appendFormat: @"%@", __parameters];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


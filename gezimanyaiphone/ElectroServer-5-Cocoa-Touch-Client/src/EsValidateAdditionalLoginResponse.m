//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsValidateAdditionalLoginResponse.h>
#import <EsThriftUtil.h>

@implementation EsValidateAdditionalLoginResponse

@synthesize approved = approved_;
@synthesize secret = secret_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_ValidateAdditionalLoginResponse;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftValidateAdditionalLoginResponse* t = (ThriftValidateAdditionalLoginResponse*) thriftObject;
	if ([t approvedIsSet]) {
		self.approved = t.approved;
	}
	if ([t secretIsSet] && t.secret != nil) {
		self.secret = t.secret;
	}
}

- (ThriftValidateAdditionalLoginResponse*) toThrift {
	ThriftValidateAdditionalLoginResponse* _t = [[[ThriftValidateAdditionalLoginResponse alloc] init] autorelease];;
	if (approved_set_) {
		BOOL _approved;
		_approved = self.approved;
		_t.approved = _approved;
	}
	if (secret_set_ && secret_ != nil) {
		NSString* _secret;
		_secret = self.secret;
		_t.secret = _secret;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftValidateAdditionalLoginResponse alloc] init];
}

- (void) setApproved: (BOOL) approved {
	approved_ = approved;
	approved_set_ = true;
}

- (void) setSecret: (NSString*) secret {
	[secret_ release];
	secret_ = [secret retain];
	secret_set_ = true;
}

- (void) dealloc {
	self.secret = nil;
	[super dealloc];
}

@end

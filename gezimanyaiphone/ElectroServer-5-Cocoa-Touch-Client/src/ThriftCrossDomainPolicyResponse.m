/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


#import "ThriftCrossDomainPolicyResponse.h"


@implementation ThriftCrossDomainPolicyResponseConstants
+ (void) initialize {
}
@end

@implementation ThriftCrossDomainPolicyResponse

- (id) initWithCustomFileEnabled: (BOOL) customFileEnabled customFileContents: (NSString *) customFileContents port: (int32_t) port
{
  self = [super init];
  __customFileEnabled = customFileEnabled;
  __customFileEnabled_isset = YES;
  __customFileContents = [customFileContents retain];
  __customFileContents_isset = YES;
  __port = port;
  __port_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"customFileEnabled"])
  {
    __customFileEnabled = [decoder decodeBoolForKey: @"customFileEnabled"];
    __customFileEnabled_isset = YES;
  }
  if ([decoder containsValueForKey: @"customFileContents"])
  {
    __customFileContents = [[decoder decodeObjectForKey: @"customFileContents"] retain];
    __customFileContents_isset = YES;
  }
  if ([decoder containsValueForKey: @"port"])
  {
    __port = [decoder decodeInt32ForKey: @"port"];
    __port_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__customFileEnabled_isset)
  {
    [encoder encodeBool: __customFileEnabled forKey: @"customFileEnabled"];
  }
  if (__customFileContents_isset)
  {
    [encoder encodeObject: __customFileContents forKey: @"customFileContents"];
  }
  if (__port_isset)
  {
    [encoder encodeInt32: __port forKey: @"port"];
  }
}

- (void) dealloc
{
  [__customFileContents release];
  [super dealloc];
}

- (BOOL) customFileEnabled {
  return __customFileEnabled;
}

- (void) setCustomFileEnabled: (BOOL) customFileEnabled {
  __customFileEnabled = customFileEnabled;
  __customFileEnabled_isset = YES;
}

- (BOOL) customFileEnabledIsSet {
  return __customFileEnabled_isset;
}

- (void) unsetCustomFileEnabled {
  __customFileEnabled_isset = NO;
}

- (NSString *) customFileContents {
  return [[__customFileContents retain] autorelease];
}

- (void) setCustomFileContents: (NSString *) customFileContents {
  [customFileContents retain];
  [__customFileContents release];
  __customFileContents = customFileContents;
  __customFileContents_isset = YES;
}

- (BOOL) customFileContentsIsSet {
  return __customFileContents_isset;
}

- (void) unsetCustomFileContents {
  [__customFileContents release];
  __customFileContents = nil;
  __customFileContents_isset = NO;
}

- (int32_t) port {
  return __port;
}

- (void) setPort: (int32_t) port {
  __port = port;
  __port_isset = YES;
}

- (BOOL) portIsSet {
  return __port_isset;
}

- (void) unsetPort {
  __port_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setCustomFileEnabled: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setCustomFileContents: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPort: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftCrossDomainPolicyResponse"];
  if (__customFileEnabled_isset) {
    [outProtocol writeFieldBeginWithName: @"customFileEnabled" type: TType_BOOL fieldID: 1];
    [outProtocol writeBool: __customFileEnabled];
    [outProtocol writeFieldEnd];
  }
  if (__customFileContents_isset) {
    if (__customFileContents != nil) {
      [outProtocol writeFieldBeginWithName: @"customFileContents" type: TType_STRING fieldID: 2];
      [outProtocol writeString: __customFileContents];
      [outProtocol writeFieldEnd];
    }
  }
  if (__port_isset) {
    [outProtocol writeFieldBeginWithName: @"port" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __port];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftCrossDomainPolicyResponse("];
  [ms appendString: @"customFileEnabled:"];
  [ms appendFormat: @"%i", __customFileEnabled];
  [ms appendString: @",customFileContents:"];
  [ms appendFormat: @"\"%@\"", __customFileContents];
  [ms appendString: @",port:"];
  [ms appendFormat: @"%i", __port];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


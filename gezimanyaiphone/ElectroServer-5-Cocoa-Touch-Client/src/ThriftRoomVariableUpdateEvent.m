/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftFlattenedEsObject.h"
#import "ThriftRoomVariableUpdateAction.h"

#import "ThriftRoomVariableUpdateEvent.h"


@implementation ThriftRoomVariableUpdateEventConstants
+ (void) initialize {
}
@end

@implementation ThriftRoomVariableUpdateEvent

- (id) initWithZoneId: (int32_t) zoneId roomId: (int32_t) roomId name: (NSString *) name valueChanged: (BOOL) valueChanged value: (ThriftFlattenedEsObject *) value persistent: (BOOL) persistent lockStatusChanged: (BOOL) lockStatusChanged locked: (BOOL) locked action: (int) action
{
  self = [super init];
  __zoneId = zoneId;
  __zoneId_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __name = [name retain];
  __name_isset = YES;
  __valueChanged = valueChanged;
  __valueChanged_isset = YES;
  __value = [value retain];
  __value_isset = YES;
  __persistent = persistent;
  __persistent_isset = YES;
  __lockStatusChanged = lockStatusChanged;
  __lockStatusChanged_isset = YES;
  __locked = locked;
  __locked_isset = YES;
  __action = action;
  __action_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"zoneId"])
  {
    __zoneId = [decoder decodeInt32ForKey: @"zoneId"];
    __zoneId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"name"])
  {
    __name = [[decoder decodeObjectForKey: @"name"] retain];
    __name_isset = YES;
  }
  if ([decoder containsValueForKey: @"valueChanged"])
  {
    __valueChanged = [decoder decodeBoolForKey: @"valueChanged"];
    __valueChanged_isset = YES;
  }
  if ([decoder containsValueForKey: @"value"])
  {
    __value = [[decoder decodeObjectForKey: @"value"] retain];
    __value_isset = YES;
  }
  if ([decoder containsValueForKey: @"persistent"])
  {
    __persistent = [decoder decodeBoolForKey: @"persistent"];
    __persistent_isset = YES;
  }
  if ([decoder containsValueForKey: @"lockStatusChanged"])
  {
    __lockStatusChanged = [decoder decodeBoolForKey: @"lockStatusChanged"];
    __lockStatusChanged_isset = YES;
  }
  if ([decoder containsValueForKey: @"locked"])
  {
    __locked = [decoder decodeBoolForKey: @"locked"];
    __locked_isset = YES;
  }
  if ([decoder containsValueForKey: @"action"])
  {
    __action = [decoder decodeIntForKey: @"action"];
    __action_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__zoneId_isset)
  {
    [encoder encodeInt32: __zoneId forKey: @"zoneId"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__name_isset)
  {
    [encoder encodeObject: __name forKey: @"name"];
  }
  if (__valueChanged_isset)
  {
    [encoder encodeBool: __valueChanged forKey: @"valueChanged"];
  }
  if (__value_isset)
  {
    [encoder encodeObject: __value forKey: @"value"];
  }
  if (__persistent_isset)
  {
    [encoder encodeBool: __persistent forKey: @"persistent"];
  }
  if (__lockStatusChanged_isset)
  {
    [encoder encodeBool: __lockStatusChanged forKey: @"lockStatusChanged"];
  }
  if (__locked_isset)
  {
    [encoder encodeBool: __locked forKey: @"locked"];
  }
  if (__action_isset)
  {
    [encoder encodeInt: __action forKey: @"action"];
  }
}

- (void) dealloc
{
  [__name release];
  [__value release];
  [super dealloc];
}

- (int32_t) zoneId {
  return __zoneId;
}

- (void) setZoneId: (int32_t) zoneId {
  __zoneId = zoneId;
  __zoneId_isset = YES;
}

- (BOOL) zoneIdIsSet {
  return __zoneId_isset;
}

- (void) unsetZoneId {
  __zoneId_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (NSString *) name {
  return [[__name retain] autorelease];
}

- (void) setName: (NSString *) name {
  [name retain];
  [__name release];
  __name = name;
  __name_isset = YES;
}

- (BOOL) nameIsSet {
  return __name_isset;
}

- (void) unsetName {
  [__name release];
  __name = nil;
  __name_isset = NO;
}

- (BOOL) valueChanged {
  return __valueChanged;
}

- (void) setValueChanged: (BOOL) valueChanged {
  __valueChanged = valueChanged;
  __valueChanged_isset = YES;
}

- (BOOL) valueChangedIsSet {
  return __valueChanged_isset;
}

- (void) unsetValueChanged {
  __valueChanged_isset = NO;
}

- (ThriftFlattenedEsObject *) value {
  return [[__value retain] autorelease];
}

- (void) setValue: (ThriftFlattenedEsObject *) value {
  [value retain];
  [__value release];
  __value = value;
  __value_isset = YES;
}

- (BOOL) valueIsSet {
  return __value_isset;
}

- (void) unsetValue {
  [__value release];
  __value = nil;
  __value_isset = NO;
}

- (BOOL) persistent {
  return __persistent;
}

- (void) setPersistent: (BOOL) persistent {
  __persistent = persistent;
  __persistent_isset = YES;
}

- (BOOL) persistentIsSet {
  return __persistent_isset;
}

- (void) unsetPersistent {
  __persistent_isset = NO;
}

- (BOOL) lockStatusChanged {
  return __lockStatusChanged;
}

- (void) setLockStatusChanged: (BOOL) lockStatusChanged {
  __lockStatusChanged = lockStatusChanged;
  __lockStatusChanged_isset = YES;
}

- (BOOL) lockStatusChangedIsSet {
  return __lockStatusChanged_isset;
}

- (void) unsetLockStatusChanged {
  __lockStatusChanged_isset = NO;
}

- (BOOL) locked {
  return __locked;
}

- (void) setLocked: (BOOL) locked {
  __locked = locked;
  __locked_isset = YES;
}

- (BOOL) lockedIsSet {
  return __locked_isset;
}

- (void) unsetLocked {
  __locked_isset = NO;
}

- (int) action {
  return __action;
}

- (void) setAction: (int) action {
  __action = action;
  __action_isset = YES;
}

- (BOOL) actionIsSet {
  return __action_isset;
}

- (void) unsetAction {
  __action_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setZoneId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setValueChanged: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_STRUCT) {
          ThriftFlattenedEsObject *fieldValue = [[ThriftFlattenedEsObject alloc] init];
          [fieldValue read: inProtocol];
          [self setValue: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setPersistent: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setLockStatusChanged: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setLocked: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 9:
        if (fieldType == TType_I32) {
          int fieldValue = [inProtocol readI32];
          [self setAction: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftRoomVariableUpdateEvent"];
  if (__zoneId_isset) {
    [outProtocol writeFieldBeginWithName: @"zoneId" type: TType_I32 fieldID: 1];
    [outProtocol writeI32: __zoneId];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__name_isset) {
    if (__name != nil) {
      [outProtocol writeFieldBeginWithName: @"name" type: TType_STRING fieldID: 3];
      [outProtocol writeString: __name];
      [outProtocol writeFieldEnd];
    }
  }
  if (__valueChanged_isset) {
    [outProtocol writeFieldBeginWithName: @"valueChanged" type: TType_BOOL fieldID: 4];
    [outProtocol writeBool: __valueChanged];
    [outProtocol writeFieldEnd];
  }
  if (__value_isset) {
    if (__value != nil) {
      [outProtocol writeFieldBeginWithName: @"value" type: TType_STRUCT fieldID: 5];
      [__value write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__persistent_isset) {
    [outProtocol writeFieldBeginWithName: @"persistent" type: TType_BOOL fieldID: 6];
    [outProtocol writeBool: __persistent];
    [outProtocol writeFieldEnd];
  }
  if (__lockStatusChanged_isset) {
    [outProtocol writeFieldBeginWithName: @"lockStatusChanged" type: TType_BOOL fieldID: 7];
    [outProtocol writeBool: __lockStatusChanged];
    [outProtocol writeFieldEnd];
  }
  if (__locked_isset) {
    [outProtocol writeFieldBeginWithName: @"locked" type: TType_BOOL fieldID: 8];
    [outProtocol writeBool: __locked];
    [outProtocol writeFieldEnd];
  }
  if (__action_isset) {
    [outProtocol writeFieldBeginWithName: @"action" type: TType_I32 fieldID: 9];
    [outProtocol writeI32: __action];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftRoomVariableUpdateEvent("];
  [ms appendString: @"zoneId:"];
  [ms appendFormat: @"%i", __zoneId];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",name:"];
  [ms appendFormat: @"\"%@\"", __name];
  [ms appendString: @",valueChanged:"];
  [ms appendFormat: @"%i", __valueChanged];
  [ms appendString: @",value:"];
  [ms appendFormat: @"%@", __value];
  [ms appendString: @",persistent:"];
  [ms appendFormat: @"%i", __persistent];
  [ms appendString: @",lockStatusChanged:"];
  [ms appendFormat: @"%i", __lockStatusChanged];
  [ms appendString: @",locked:"];
  [ms appendFormat: @"%i", __locked];
  [ms appendString: @",action:"];
  [ms appendFormat: @"%i", __action];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsServerKickUserEvent.h>
#import <EsThriftUtil.h>

@implementation EsServerKickUserEvent

@synthesize error = error_;
@synthesize esObject = esObject_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_ServerKickUserEvent;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftServerKickUserEvent* t = (ThriftServerKickUserEvent*) thriftObject;
	if ([t errorIsSet]) {
		self.error = t.error;
	}
	if ([t esObjectIsSet] && t.esObject != nil) {
		self.esObject = [EsThriftUtil unflattenEsObjectRO:[[[EsFlattenedEsObjectRO alloc] initWithThriftObject:t.esObject] autorelease]];
	}
}

- (ThriftServerKickUserEvent*) toThrift {
	ThriftServerKickUserEvent* _t = [[[ThriftServerKickUserEvent alloc] init] autorelease];;
	if (error_set_) {
		int _error;
		_error = self.error;
		_t.error = _error;
	}
	if (esObject_set_ && esObject_ != nil) {
		ThriftFlattenedEsObjectRO* _esObject;
		_esObject = [[EsThriftUtil flattenEsObjectRO:self.esObject] toThrift];
		_t.esObject = _esObject;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftServerKickUserEvent alloc] init];
}

- (void) setError: (int) error {
	error_ = error;
	error_set_ = true;
}

- (void) setEsObject: (EsObject*) esObject {
	[esObject_ release];
	esObject_ = [esObject retain];
	esObject_set_ = true;
}

- (void) dealloc {
	self.esObject = nil;
	[super dealloc];
}

@end

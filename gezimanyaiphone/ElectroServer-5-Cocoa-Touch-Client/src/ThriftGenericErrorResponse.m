/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftFlattenedEsObject.h"
#import "ThriftErrorType.h"
#import "ThriftMessageType.h"

#import "ThriftGenericErrorResponse.h"


@implementation ThriftGenericErrorResponseConstants
+ (void) initialize {
}
@end

@implementation ThriftGenericErrorResponse

- (id) initWithRequestMessageType: (int) requestMessageType errorType: (int) errorType extraData: (ThriftFlattenedEsObject *) extraData
{
  self = [super init];
  __requestMessageType = requestMessageType;
  __requestMessageType_isset = YES;
  __errorType = errorType;
  __errorType_isset = YES;
  __extraData = [extraData retain];
  __extraData_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"requestMessageType"])
  {
    __requestMessageType = [decoder decodeIntForKey: @"requestMessageType"];
    __requestMessageType_isset = YES;
  }
  if ([decoder containsValueForKey: @"errorType"])
  {
    __errorType = [decoder decodeIntForKey: @"errorType"];
    __errorType_isset = YES;
  }
  if ([decoder containsValueForKey: @"extraData"])
  {
    __extraData = [[decoder decodeObjectForKey: @"extraData"] retain];
    __extraData_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__requestMessageType_isset)
  {
    [encoder encodeInt: __requestMessageType forKey: @"requestMessageType"];
  }
  if (__errorType_isset)
  {
    [encoder encodeInt: __errorType forKey: @"errorType"];
  }
  if (__extraData_isset)
  {
    [encoder encodeObject: __extraData forKey: @"extraData"];
  }
}

- (void) dealloc
{
  [__extraData release];
  [super dealloc];
}

- (int) requestMessageType {
  return __requestMessageType;
}

- (void) setRequestMessageType: (int) requestMessageType {
  __requestMessageType = requestMessageType;
  __requestMessageType_isset = YES;
}

- (BOOL) requestMessageTypeIsSet {
  return __requestMessageType_isset;
}

- (void) unsetRequestMessageType {
  __requestMessageType_isset = NO;
}

- (int) errorType {
  return __errorType;
}

- (void) setErrorType: (int) errorType {
  __errorType = errorType;
  __errorType_isset = YES;
}

- (BOOL) errorTypeIsSet {
  return __errorType_isset;
}

- (void) unsetErrorType {
  __errorType_isset = NO;
}

- (ThriftFlattenedEsObject *) extraData {
  return [[__extraData retain] autorelease];
}

- (void) setExtraData: (ThriftFlattenedEsObject *) extraData {
  [extraData retain];
  [__extraData release];
  __extraData = extraData;
  __extraData_isset = YES;
}

- (BOOL) extraDataIsSet {
  return __extraData_isset;
}

- (void) unsetExtraData {
  [__extraData release];
  __extraData = nil;
  __extraData_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I32) {
          int fieldValue = [inProtocol readI32];
          [self setRequestMessageType: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int fieldValue = [inProtocol readI32];
          [self setErrorType: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_STRUCT) {
          ThriftFlattenedEsObject *fieldValue = [[ThriftFlattenedEsObject alloc] init];
          [fieldValue read: inProtocol];
          [self setExtraData: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftGenericErrorResponse"];
  if (__requestMessageType_isset) {
    [outProtocol writeFieldBeginWithName: @"requestMessageType" type: TType_I32 fieldID: 1];
    [outProtocol writeI32: __requestMessageType];
    [outProtocol writeFieldEnd];
  }
  if (__errorType_isset) {
    [outProtocol writeFieldBeginWithName: @"errorType" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __errorType];
    [outProtocol writeFieldEnd];
  }
  if (__extraData_isset) {
    if (__extraData != nil) {
      [outProtocol writeFieldBeginWithName: @"extraData" type: TType_STRUCT fieldID: 3];
      [__extraData write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftGenericErrorResponse("];
  [ms appendString: @"requestMessageType:"];
  [ms appendFormat: @"%i", __requestMessageType];
  [ms appendString: @",errorType:"];
  [ms appendFormat: @"%i", __errorType];
  [ms appendString: @",extraData:"];
  [ms appendFormat: @"%@", __extraData];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


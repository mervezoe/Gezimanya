/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftZoneListEntry.h"

#import "ThriftGetZonesResponse.h"


@implementation ThriftGetZonesResponseConstants
+ (void) initialize {
}
@end

@implementation ThriftGetZonesResponse

- (id) initWithZones: (NSArray *) zones
{
  self = [super init];
  __zones = [zones retain];
  __zones_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"zones"])
  {
    __zones = [[decoder decodeObjectForKey: @"zones"] retain];
    __zones_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__zones_isset)
  {
    [encoder encodeObject: __zones forKey: @"zones"];
  }
}

- (void) dealloc
{
  [__zones release];
  [super dealloc];
}

- (NSArray *) zones {
  return [[__zones retain] autorelease];
}

- (void) setZones: (NSArray *) zones {
  [zones retain];
  [__zones release];
  __zones = zones;
  __zones_isset = YES;
}

- (BOOL) zonesIsSet {
  return __zones_isset;
}

- (void) unsetZones {
  [__zones release];
  __zones = nil;
  __zones_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_LIST) {
          int _size0;
          [inProtocol readListBeginReturningElementType: NULL size: &_size0];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size0];
          int _i1;
          for (_i1 = 0; _i1 < _size0; ++_i1)
          {
            ThriftZoneListEntry *_elem2 = [[ThriftZoneListEntry alloc] init];
            [_elem2 read: inProtocol];
            [fieldValue addObject: _elem2];
            [_elem2 release];
          }
          [inProtocol readListEnd];
          [self setZones: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftGetZonesResponse"];
  if (__zones_isset) {
    if (__zones != nil) {
      [outProtocol writeFieldBeginWithName: @"zones" type: TType_LIST fieldID: 1];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__zones count]];
        int i4;
        for (i4 = 0; i4 < [__zones count]; i4++)
        {
          [[__zones objectAtIndex: i4] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftGetZonesResponse("];
  [ms appendString: @"zones:"];
  [ms appendFormat: @"%@", __zones];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


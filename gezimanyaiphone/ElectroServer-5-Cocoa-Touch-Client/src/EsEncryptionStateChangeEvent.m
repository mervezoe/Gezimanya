//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsEncryptionStateChangeEvent.h>
#import <EsThriftUtil.h>

@implementation EsEncryptionStateChangeEvent

@synthesize encryptionOn = encryptionOn_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_EncryptionStateChange;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftEncryptionStateChangeEvent* t = (ThriftEncryptionStateChangeEvent*) thriftObject;
	if ([t encryptionOnIsSet]) {
		self.encryptionOn = t.encryptionOn;
	}
}

- (ThriftEncryptionStateChangeEvent*) toThrift {
	ThriftEncryptionStateChangeEvent* _t = [[[ThriftEncryptionStateChangeEvent alloc] init] autorelease];;
	if (encryptionOn_set_) {
		BOOL _encryptionOn;
		_encryptionOn = self.encryptionOn;
		_t.encryptionOn = _encryptionOn;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftEncryptionStateChangeEvent alloc] init];
}

- (void) setEncryptionOn: (BOOL) encryptionOn {
	encryptionOn_ = encryptionOn;
	encryptionOn_set_ = true;
}

- (void) dealloc {
	[super dealloc];
}

@end

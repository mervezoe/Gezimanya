//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsMessage.h>
#import <EsMessageType.h>
#import <EsRequest.h>
#import <EsResponse.h>
#import <EsEvent.h>
#import <EsEntity.h>
#import <EsObject.h>
#import <ThriftPrivateMessageRequest.h>
#import <EsFlattenedEsObject.h>
#import <ThriftFlattenedEsObject.h>

/**
 * This request is used to send private messages to one or more users at once. A private message can contain an optional EsObject. A private message can be sent from any user to any other user. Rooms play no part in this. <br>
 Private messages can be intercepted by a Private Message Event Handler on the server and modified or killed. Private message filtering can be enabled using the web-based administrator.
 * 
 * This shows how to send a private message to one user. It also shows how to capture the PrivateMessageEvent.
<pre>
private var _es:ElectroServer;

private function initialize():void {
        _es.engine.addEventListener(MessageType.PrivateMessageEvent.name, onPrivateMessageEvent);
}

private function onPrivateMessageEvent(e:PrivateMessageEvent):void {
        trace(e.userName + " says '" + e.message + "'");
}

private function sendTestMessage():void {
        //create the message object
        var pmr:PrivateMessageRequest = new PrivateMessageRequest();

        //configure it
        pmr.message = "Hello World!";
        pmr.userNames = ["frank"];

        //send it
        _es.engine.send(pmr);
}

</pre>
 */
@interface EsPrivateMessageRequest : EsRequest {
@private
	BOOL message_set_;
	NSString* message_;
	BOOL userNames_set_;
	NSMutableArray* userNames_;
	BOOL esObject_set_;
	EsObject* esObject_;
}

/**
 * The message to send.
 */
@property(retain,nonatomic) NSString* message;
/**
 * List of user names specifying show should receive the message.
 */
@property(retain,nonatomic) NSMutableArray* userNames;
/**
 * Optional EsObject to be sent with the message.
 */
@property(retain,nonatomic) EsObject* esObject;

- (id) init;
- (id) initWithThriftObject: (id) thriftObject;
- (void) fromThrift: (id) thriftObject;
- (ThriftPrivateMessageRequest*) toThrift;
- (id) newThrift;
@end

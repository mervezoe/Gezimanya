//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsMessage.h>
#import <EsMessageType.h>
#import <EsRequest.h>
#import <EsResponse.h>
#import <EsEvent.h>
#import <EsEntity.h>
#import <EsObject.h>
#import <ThriftGetUserVariablesRequest.h>

/**
 * Loads a list of user variables for the specified userName. By default it returns all of the user's variables. But if a list of userVariable names is provided in the userVariableNames 
 property, then only those user variables are returned. This request leads to a GetUserVariablesResponse.
 * 
 * This shows how to load all user variables for a user
<pre>
private var _es:ElectroServer;

private function initialize():void {
        _es.engine.addEventListener(MessageType.GetUserVariablesResponse.name, onGetUserVariablesResponse);

        var guvr:GetUserVariablesRequest = new GetUserVariablesRequest();
        guvr.userName = "mike";

        _es.engine.send(guvr);
}

private function onGetUserVariablesResponse(e:GetUserVariablesResponse):void {
        trace("User variables loaded for " +e.userName);
        for (var name:String in e.userVariables) {
                var value:EsObject = e.userVariables[name];
                trace(name + ": " + value.toString());
        }
}
</pre>

This shows how to load only some user variables for a user
<pre>
private var _es:ElectroServer;

private function initialize():void {
        _es.engine.addEventListener(MessageType.GetUserVariablesResponse.name, onGetUserVariablesResponse);

        var guvr:GetUserVariablesRequest = new GetUserVariablesRequest();
        guvr.userName = "mike";
        guvr.userVariableNames = ["profile", "gameScore"];

        _es.engine.send(guvr);
}

private function onGetUserVariablesResponse(e:GetUserVariablesResponse):void {
        trace("User variables loaded for " +e.userName);
        for (var name:String in e.userVariables) {
                var value:EsObject = e.userVariables[name];
                trace(name + ": " + value.toString());
        }
}

</pre>
 */
@interface EsGetUserVariablesRequest : EsRequest {
@private
	BOOL userName_set_;
	NSString* userName_;
	BOOL userVariableNames_set_;
	NSMutableSet* userVariableNames_;
}

/**
 * Name of the user whose variables are to be loaded
 */
@property(retain,nonatomic) NSString* userName;
/**
 * Optional list of variable name used to filter what is loaded
 */
@property(retain,nonatomic) NSMutableSet* userVariableNames;

- (id) init;
- (id) initWithThriftObject: (id) thriftObject;
- (void) fromThrift: (id) thriftObject;
- (ThriftGetUserVariablesRequest*) toThrift;
- (id) newThrift;
@end

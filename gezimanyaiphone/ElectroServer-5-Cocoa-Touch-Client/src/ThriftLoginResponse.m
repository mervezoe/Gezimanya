/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftFlattenedEsObjectRO.h"
#import "ThriftErrorType.h"

#import "ThriftLoginResponse.h"


@implementation ThriftLoginResponseConstants
+ (void) initialize {
}
@end

@implementation ThriftLoginResponse

- (id) initWithSuccessful: (BOOL) successful error: (int) error esObject: (ThriftFlattenedEsObjectRO *) esObject userName: (NSString *) userName userVariables: (NSDictionary *) userVariables buddyListEntries: (NSDictionary *) buddyListEntries
{
  self = [super init];
  __successful = successful;
  __successful_isset = YES;
  __error = error;
  __error_isset = YES;
  __esObject = [esObject retain];
  __esObject_isset = YES;
  __userName = [userName retain];
  __userName_isset = YES;
  __userVariables = [userVariables retain];
  __userVariables_isset = YES;
  __buddyListEntries = [buddyListEntries retain];
  __buddyListEntries_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"successful"])
  {
    __successful = [decoder decodeBoolForKey: @"successful"];
    __successful_isset = YES;
  }
  if ([decoder containsValueForKey: @"error"])
  {
    __error = [decoder decodeIntForKey: @"error"];
    __error_isset = YES;
  }
  if ([decoder containsValueForKey: @"esObject"])
  {
    __esObject = [[decoder decodeObjectForKey: @"esObject"] retain];
    __esObject_isset = YES;
  }
  if ([decoder containsValueForKey: @"userName"])
  {
    __userName = [[decoder decodeObjectForKey: @"userName"] retain];
    __userName_isset = YES;
  }
  if ([decoder containsValueForKey: @"userVariables"])
  {
    __userVariables = [[decoder decodeObjectForKey: @"userVariables"] retain];
    __userVariables_isset = YES;
  }
  if ([decoder containsValueForKey: @"buddyListEntries"])
  {
    __buddyListEntries = [[decoder decodeObjectForKey: @"buddyListEntries"] retain];
    __buddyListEntries_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__successful_isset)
  {
    [encoder encodeBool: __successful forKey: @"successful"];
  }
  if (__error_isset)
  {
    [encoder encodeInt: __error forKey: @"error"];
  }
  if (__esObject_isset)
  {
    [encoder encodeObject: __esObject forKey: @"esObject"];
  }
  if (__userName_isset)
  {
    [encoder encodeObject: __userName forKey: @"userName"];
  }
  if (__userVariables_isset)
  {
    [encoder encodeObject: __userVariables forKey: @"userVariables"];
  }
  if (__buddyListEntries_isset)
  {
    [encoder encodeObject: __buddyListEntries forKey: @"buddyListEntries"];
  }
}

- (void) dealloc
{
  [__esObject release];
  [__userName release];
  [__userVariables release];
  [__buddyListEntries release];
  [super dealloc];
}

- (BOOL) successful {
  return __successful;
}

- (void) setSuccessful: (BOOL) successful {
  __successful = successful;
  __successful_isset = YES;
}

- (BOOL) successfulIsSet {
  return __successful_isset;
}

- (void) unsetSuccessful {
  __successful_isset = NO;
}

- (int) error {
  return __error;
}

- (void) setError: (int) error {
  __error = error;
  __error_isset = YES;
}

- (BOOL) errorIsSet {
  return __error_isset;
}

- (void) unsetError {
  __error_isset = NO;
}

- (ThriftFlattenedEsObjectRO *) esObject {
  return [[__esObject retain] autorelease];
}

- (void) setEsObject: (ThriftFlattenedEsObjectRO *) esObject {
  [esObject retain];
  [__esObject release];
  __esObject = esObject;
  __esObject_isset = YES;
}

- (BOOL) esObjectIsSet {
  return __esObject_isset;
}

- (void) unsetEsObject {
  [__esObject release];
  __esObject = nil;
  __esObject_isset = NO;
}

- (NSString *) userName {
  return [[__userName retain] autorelease];
}

- (void) setUserName: (NSString *) userName {
  [userName retain];
  [__userName release];
  __userName = userName;
  __userName_isset = YES;
}

- (BOOL) userNameIsSet {
  return __userName_isset;
}

- (void) unsetUserName {
  [__userName release];
  __userName = nil;
  __userName_isset = NO;
}

- (NSDictionary *) userVariables {
  return [[__userVariables retain] autorelease];
}

- (void) setUserVariables: (NSDictionary *) userVariables {
  [userVariables retain];
  [__userVariables release];
  __userVariables = userVariables;
  __userVariables_isset = YES;
}

- (BOOL) userVariablesIsSet {
  return __userVariables_isset;
}

- (void) unsetUserVariables {
  [__userVariables release];
  __userVariables = nil;
  __userVariables_isset = NO;
}

- (NSDictionary *) buddyListEntries {
  return [[__buddyListEntries retain] autorelease];
}

- (void) setBuddyListEntries: (NSDictionary *) buddyListEntries {
  [buddyListEntries retain];
  [__buddyListEntries release];
  __buddyListEntries = buddyListEntries;
  __buddyListEntries_isset = YES;
}

- (BOOL) buddyListEntriesIsSet {
  return __buddyListEntries_isset;
}

- (void) unsetBuddyListEntries {
  [__buddyListEntries release];
  __buddyListEntries = nil;
  __buddyListEntries_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setSuccessful: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int fieldValue = [inProtocol readI32];
          [self setError: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_STRUCT) {
          ThriftFlattenedEsObjectRO *fieldValue = [[ThriftFlattenedEsObjectRO alloc] init];
          [fieldValue read: inProtocol];
          [self setEsObject: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setUserName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_MAP) {
          int _size0;
          [inProtocol readMapBeginReturningKeyType: NULL valueType: NULL size: &_size0];
          NSMutableDictionary * fieldValue = [[NSMutableDictionary alloc] initWithCapacity: _size0];
          int _i1;
          for (_i1 = 0; _i1 < _size0; ++_i1)
          {
            NSString * _key2 = [inProtocol readString];
            ThriftFlattenedEsObjectRO *_val3 = [[ThriftFlattenedEsObjectRO alloc] init];
            [_val3 read: inProtocol];
            [fieldValue setObject: _val3 forKey: _key2];
            [_val3 release];
          }
          [inProtocol readMapEnd];
          [self setUserVariables: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_MAP) {
          int _size4;
          [inProtocol readMapBeginReturningKeyType: NULL valueType: NULL size: &_size4];
          NSMutableDictionary * fieldValue = [[NSMutableDictionary alloc] initWithCapacity: _size4];
          int _i5;
          for (_i5 = 0; _i5 < _size4; ++_i5)
          {
            NSString * _key6 = [inProtocol readString];
            ThriftFlattenedEsObjectRO *_val7 = [[ThriftFlattenedEsObjectRO alloc] init];
            [_val7 read: inProtocol];
            [fieldValue setObject: _val7 forKey: _key6];
            [_val7 release];
          }
          [inProtocol readMapEnd];
          [self setBuddyListEntries: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftLoginResponse"];
  if (__successful_isset) {
    [outProtocol writeFieldBeginWithName: @"successful" type: TType_BOOL fieldID: 1];
    [outProtocol writeBool: __successful];
    [outProtocol writeFieldEnd];
  }
  if (__error_isset) {
    [outProtocol writeFieldBeginWithName: @"error" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __error];
    [outProtocol writeFieldEnd];
  }
  if (__esObject_isset) {
    if (__esObject != nil) {
      [outProtocol writeFieldBeginWithName: @"esObject" type: TType_STRUCT fieldID: 3];
      [__esObject write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__userName_isset) {
    if (__userName != nil) {
      [outProtocol writeFieldBeginWithName: @"userName" type: TType_STRING fieldID: 4];
      [outProtocol writeString: __userName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__userVariables_isset) {
    if (__userVariables != nil) {
      [outProtocol writeFieldBeginWithName: @"userVariables" type: TType_MAP fieldID: 6];
      {
        [outProtocol writeMapBeginWithKeyType: TType_STRING valueType: TType_STRUCT size: [__userVariables count]];
        NSEnumerator * _iter8 = [__userVariables keyEnumerator];
        id key9;
        while ((key9 = [_iter8 nextObject]))
        {
          [outProtocol writeString: key9];
          [[__userVariables objectForKey: key9] write: outProtocol];
        }
        [outProtocol writeMapEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__buddyListEntries_isset) {
    if (__buddyListEntries != nil) {
      [outProtocol writeFieldBeginWithName: @"buddyListEntries" type: TType_MAP fieldID: 7];
      {
        [outProtocol writeMapBeginWithKeyType: TType_STRING valueType: TType_STRUCT size: [__buddyListEntries count]];
        NSEnumerator * _iter10 = [__buddyListEntries keyEnumerator];
        id key11;
        while ((key11 = [_iter10 nextObject]))
        {
          [outProtocol writeString: key11];
          [[__buddyListEntries objectForKey: key11] write: outProtocol];
        }
        [outProtocol writeMapEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftLoginResponse("];
  [ms appendString: @"successful:"];
  [ms appendFormat: @"%i", __successful];
  [ms appendString: @",error:"];
  [ms appendFormat: @"%i", __error];
  [ms appendString: @",esObject:"];
  [ms appendFormat: @"%@", __esObject];
  [ms appendString: @",userName:"];
  [ms appendFormat: @"\"%@\"", __userName];
  [ms appendString: @",userVariables:"];
  [ms appendFormat: @"%@", __userVariables];
  [ms appendString: @",buddyListEntries:"];
  [ms appendFormat: @"%@", __buddyListEntries];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


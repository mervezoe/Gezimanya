//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsGetUserVariablesRequest.h>
#import <EsThriftUtil.h>

@implementation EsGetUserVariablesRequest

@synthesize userName = userName_;
@synthesize userVariableNames = userVariableNames_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_GetUserVariablesRequest;
		self.userVariableNames = [NSMutableSet set];
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftGetUserVariablesRequest* t = (ThriftGetUserVariablesRequest*) thriftObject;
	if ([t userNameIsSet] && t.userName != nil) {
		self.userName = t.userName;
	}
	if ([t userVariableNamesIsSet] && t.userVariableNames != nil) {
		self.userVariableNames = [[[NSMutableSet alloc] init] autorelease];
		for (NSString* _tValVar_0 in t.userVariableNames) {
			NSString* _listDestVar_0;
			_listDestVar_0 = _tValVar_0;
			[self.userVariableNames addObject: _listDestVar_0];
		}
	}
}

- (ThriftGetUserVariablesRequest*) toThrift {
	ThriftGetUserVariablesRequest* _t = [[[ThriftGetUserVariablesRequest alloc] init] autorelease];;
	if (userName_set_ && userName_ != nil) {
		NSString* _userName;
		_userName = self.userName;
		_t.userName = _userName;
	}
	if (userVariableNames_set_ && userVariableNames_ != nil) {
		NSMutableSet* _userVariableNames;
		_userVariableNames = [[[NSMutableSet alloc] init] autorelease];
		for (NSString* _tValVar_0 in self.userVariableNames) {
			NSString* _listDestVar_0;
			_listDestVar_0 = _tValVar_0;
			[_userVariableNames addObject: _listDestVar_0];
		}
		_t.userVariableNames = _userVariableNames;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftGetUserVariablesRequest alloc] init];
}

- (void) setUserName: (NSString*) userName {
	[userName_ release];
	userName_ = [userName retain];
	userName_set_ = true;
}

- (void) setUserVariableNames: (NSMutableSet*) userVariableNames {
	[userVariableNames_ release];
	userVariableNames_ = [userVariableNames retain];
	userVariableNames_set_ = true;
}

- (void) dealloc {
	self.userName = nil;
	self.userVariableNames = nil;
	[super dealloc];
}

@end

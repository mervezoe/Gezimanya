//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsMessage.h>
#import <EsMessageType.h>
#import <EsRequest.h>
#import <EsResponse.h>
#import <EsEvent.h>
#import <EsEntity.h>
#import <EsObject.h>
#import <ThriftGenericErrorResponse.h>
#import <EsFlattenedEsObject.h>
#import <ThriftFlattenedEsObject.h>
#import <EsErrorType.h>
#import <ThriftErrorType.h>
#import <EsMessageType.h>
#import <ThriftMessageType.h>

/**
 * When the client sends a request that request can lead to a server error, or just a failure. For example, a client could send a JoinRoomRequest for a room that is already at capacity, and 
 that would lead to this response occuring with an errorType value of ErrorType.RoomAtCapacity. It is good practice to listen for this event and to at least log when it occurs.
 * 
 * This example shows how to capture the GenericErrorResponse event.
 <pre>
private var _es:ElectroServer;

private function initialize():void {
        _es.engine.addEventListener(MessageType.GenericErrorResponse.name, onGenericErrorResponse);
}

private function onGenericErrorResponse(e:GenericErrorResponse):void {
        trace("Generic error of type: " + e.errorType.name);
}

 </pre>
 */
@interface EsGenericErrorResponse : EsResponse {
@private
	BOOL requestMessageType_set_;
	int requestMessageType_;
	BOOL errorType_set_;
	int errorType_;
	BOOL extraData_set_;
	EsObject* extraData_;
}

/**
 * Contains the message type of the request that lead to this error response.
 */
@property(nonatomic) int requestMessageType;
/**
 * The ErrorType instance that desribes this error.
 */
@property(nonatomic) int errorType;
/**
 * Optional EsObject that contains extra data associated with this error.
 */
@property(retain,nonatomic) EsObject* extraData;

- (id) init;
- (id) initWithThriftObject: (id) thriftObject;
- (void) fromThrift: (id) thriftObject;
- (ThriftGenericErrorResponse*) toThrift;
- (id) newThrift;
@end

/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>

#import "ThriftFlattenedEsObject.h"
#import "ThriftSearchCriteria.h"

#import "ThriftQuickJoinGameRequest.h"


@implementation ThriftQuickJoinGameRequestConstants
+ (void) initialize {
}
@end

@implementation ThriftQuickJoinGameRequest

- (id) initWithGameType: (NSString *) gameType zoneName: (NSString *) zoneName password: (NSString *) password locked: (BOOL) locked hidden: (BOOL) hidden createOnly: (BOOL) createOnly gameDetails: (ThriftFlattenedEsObject *) gameDetails criteria: (ThriftSearchCriteria *) criteria
{
  self = [super init];
  __gameType = [gameType retain];
  __gameType_isset = YES;
  __zoneName = [zoneName retain];
  __zoneName_isset = YES;
  __password = [password retain];
  __password_isset = YES;
  __locked = locked;
  __locked_isset = YES;
  __hidden = hidden;
  __hidden_isset = YES;
  __createOnly = createOnly;
  __createOnly_isset = YES;
  __gameDetails = [gameDetails retain];
  __gameDetails_isset = YES;
  __criteria = [criteria retain];
  __criteria_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"gameType"])
  {
    __gameType = [[decoder decodeObjectForKey: @"gameType"] retain];
    __gameType_isset = YES;
  }
  if ([decoder containsValueForKey: @"zoneName"])
  {
    __zoneName = [[decoder decodeObjectForKey: @"zoneName"] retain];
    __zoneName_isset = YES;
  }
  if ([decoder containsValueForKey: @"password"])
  {
    __password = [[decoder decodeObjectForKey: @"password"] retain];
    __password_isset = YES;
  }
  if ([decoder containsValueForKey: @"locked"])
  {
    __locked = [decoder decodeBoolForKey: @"locked"];
    __locked_isset = YES;
  }
  if ([decoder containsValueForKey: @"hidden"])
  {
    __hidden = [decoder decodeBoolForKey: @"hidden"];
    __hidden_isset = YES;
  }
  if ([decoder containsValueForKey: @"createOnly"])
  {
    __createOnly = [decoder decodeBoolForKey: @"createOnly"];
    __createOnly_isset = YES;
  }
  if ([decoder containsValueForKey: @"gameDetails"])
  {
    __gameDetails = [[decoder decodeObjectForKey: @"gameDetails"] retain];
    __gameDetails_isset = YES;
  }
  if ([decoder containsValueForKey: @"criteria"])
  {
    __criteria = [[decoder decodeObjectForKey: @"criteria"] retain];
    __criteria_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__gameType_isset)
  {
    [encoder encodeObject: __gameType forKey: @"gameType"];
  }
  if (__zoneName_isset)
  {
    [encoder encodeObject: __zoneName forKey: @"zoneName"];
  }
  if (__password_isset)
  {
    [encoder encodeObject: __password forKey: @"password"];
  }
  if (__locked_isset)
  {
    [encoder encodeBool: __locked forKey: @"locked"];
  }
  if (__hidden_isset)
  {
    [encoder encodeBool: __hidden forKey: @"hidden"];
  }
  if (__createOnly_isset)
  {
    [encoder encodeBool: __createOnly forKey: @"createOnly"];
  }
  if (__gameDetails_isset)
  {
    [encoder encodeObject: __gameDetails forKey: @"gameDetails"];
  }
  if (__criteria_isset)
  {
    [encoder encodeObject: __criteria forKey: @"criteria"];
  }
}

- (void) dealloc
{
  [__gameType release];
  [__zoneName release];
  [__password release];
  [__gameDetails release];
  [__criteria release];
  [super dealloc];
}

- (NSString *) gameType {
  return [[__gameType retain] autorelease];
}

- (void) setGameType: (NSString *) gameType {
  [gameType retain];
  [__gameType release];
  __gameType = gameType;
  __gameType_isset = YES;
}

- (BOOL) gameTypeIsSet {
  return __gameType_isset;
}

- (void) unsetGameType {
  [__gameType release];
  __gameType = nil;
  __gameType_isset = NO;
}

- (NSString *) zoneName {
  return [[__zoneName retain] autorelease];
}

- (void) setZoneName: (NSString *) zoneName {
  [zoneName retain];
  [__zoneName release];
  __zoneName = zoneName;
  __zoneName_isset = YES;
}

- (BOOL) zoneNameIsSet {
  return __zoneName_isset;
}

- (void) unsetZoneName {
  [__zoneName release];
  __zoneName = nil;
  __zoneName_isset = NO;
}

- (NSString *) password {
  return [[__password retain] autorelease];
}

- (void) setPassword: (NSString *) password {
  [password retain];
  [__password release];
  __password = password;
  __password_isset = YES;
}

- (BOOL) passwordIsSet {
  return __password_isset;
}

- (void) unsetPassword {
  [__password release];
  __password = nil;
  __password_isset = NO;
}

- (BOOL) locked {
  return __locked;
}

- (void) setLocked: (BOOL) locked {
  __locked = locked;
  __locked_isset = YES;
}

- (BOOL) lockedIsSet {
  return __locked_isset;
}

- (void) unsetLocked {
  __locked_isset = NO;
}

- (BOOL) hidden {
  return __hidden;
}

- (void) setHidden: (BOOL) hidden {
  __hidden = hidden;
  __hidden_isset = YES;
}

- (BOOL) hiddenIsSet {
  return __hidden_isset;
}

- (void) unsetHidden {
  __hidden_isset = NO;
}

- (BOOL) createOnly {
  return __createOnly;
}

- (void) setCreateOnly: (BOOL) createOnly {
  __createOnly = createOnly;
  __createOnly_isset = YES;
}

- (BOOL) createOnlyIsSet {
  return __createOnly_isset;
}

- (void) unsetCreateOnly {
  __createOnly_isset = NO;
}

- (ThriftFlattenedEsObject *) gameDetails {
  return [[__gameDetails retain] autorelease];
}

- (void) setGameDetails: (ThriftFlattenedEsObject *) gameDetails {
  [gameDetails retain];
  [__gameDetails release];
  __gameDetails = gameDetails;
  __gameDetails_isset = YES;
}

- (BOOL) gameDetailsIsSet {
  return __gameDetails_isset;
}

- (void) unsetGameDetails {
  [__gameDetails release];
  __gameDetails = nil;
  __gameDetails_isset = NO;
}

- (ThriftSearchCriteria *) criteria {
  return [[__criteria retain] autorelease];
}

- (void) setCriteria: (ThriftSearchCriteria *) criteria {
  [criteria retain];
  [__criteria release];
  __criteria = criteria;
  __criteria_isset = YES;
}

- (BOOL) criteriaIsSet {
  return __criteria_isset;
}

- (void) unsetCriteria {
  [__criteria release];
  __criteria = nil;
  __criteria_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setGameType: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setZoneName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setPassword: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setLocked: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setHidden: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setCreateOnly: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_STRUCT) {
          ThriftFlattenedEsObject *fieldValue = [[ThriftFlattenedEsObject alloc] init];
          [fieldValue read: inProtocol];
          [self setGameDetails: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_STRUCT) {
          ThriftSearchCriteria *fieldValue = [[ThriftSearchCriteria alloc] init];
          [fieldValue read: inProtocol];
          [self setCriteria: fieldValue];
          [fieldValue release];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftQuickJoinGameRequest"];
  if (__gameType_isset) {
    if (__gameType != nil) {
      [outProtocol writeFieldBeginWithName: @"gameType" type: TType_STRING fieldID: 1];
      [outProtocol writeString: __gameType];
      [outProtocol writeFieldEnd];
    }
  }
  if (__zoneName_isset) {
    if (__zoneName != nil) {
      [outProtocol writeFieldBeginWithName: @"zoneName" type: TType_STRING fieldID: 2];
      [outProtocol writeString: __zoneName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__password_isset) {
    if (__password != nil) {
      [outProtocol writeFieldBeginWithName: @"password" type: TType_STRING fieldID: 3];
      [outProtocol writeString: __password];
      [outProtocol writeFieldEnd];
    }
  }
  if (__locked_isset) {
    [outProtocol writeFieldBeginWithName: @"locked" type: TType_BOOL fieldID: 4];
    [outProtocol writeBool: __locked];
    [outProtocol writeFieldEnd];
  }
  if (__hidden_isset) {
    [outProtocol writeFieldBeginWithName: @"hidden" type: TType_BOOL fieldID: 5];
    [outProtocol writeBool: __hidden];
    [outProtocol writeFieldEnd];
  }
  if (__createOnly_isset) {
    [outProtocol writeFieldBeginWithName: @"createOnly" type: TType_BOOL fieldID: 6];
    [outProtocol writeBool: __createOnly];
    [outProtocol writeFieldEnd];
  }
  if (__gameDetails_isset) {
    if (__gameDetails != nil) {
      [outProtocol writeFieldBeginWithName: @"gameDetails" type: TType_STRUCT fieldID: 7];
      [__gameDetails write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__criteria_isset) {
    if (__criteria != nil) {
      [outProtocol writeFieldBeginWithName: @"criteria" type: TType_STRUCT fieldID: 8];
      [__criteria write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftQuickJoinGameRequest("];
  [ms appendString: @"gameType:"];
  [ms appendFormat: @"\"%@\"", __gameType];
  [ms appendString: @",zoneName:"];
  [ms appendFormat: @"\"%@\"", __zoneName];
  [ms appendString: @",password:"];
  [ms appendFormat: @"\"%@\"", __password];
  [ms appendString: @",locked:"];
  [ms appendFormat: @"%i", __locked];
  [ms appendString: @",hidden:"];
  [ms appendFormat: @"%i", __hidden];
  [ms appendString: @",createOnly:"];
  [ms appendFormat: @"%i", __createOnly];
  [ms appendString: @",gameDetails:"];
  [ms appendFormat: @"%@", __gameDetails];
  [ms appendString: @",criteria:"];
  [ms appendFormat: @"%@", __criteria];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsMessage.h>
#import <EsMessageType.h>
#import <EsRequest.h>
#import <EsResponse.h>
#import <EsEvent.h>
#import <EsEntity.h>
#import <EsObject.h>
#import <ThriftPluginRequest.h>
#import <EsFlattenedEsObject.h>
#import <ThriftFlattenedEsObject.h>

/**
 * This class is used to send a message to a plugin. The plugin can be a server-level plugin or room-level plugin. If it is a room-level plugin then the room id and zone id need to be specified.
 * 
 * This example shows how to send a request to a room plugin, and how to capture an event when a plugin sends a message to the client.
 
<pre>
private var _es:ElectroServer;
private var _room:Room;

private function initialize():void {
        _es.engine.addEventListener(MessageType.PluginMessageEvent.name, onPluginMessageEvent);
}

private function sendTestMessage():void {
        var ipr:InvokePluginRequest = new InvokePluginRequest();

        ipr.roomId = _room.id;
        ipr.zoneId = _room.zoneId;

        ipr.pluginName = "TankGame";
        ipr.parameters = new EsObject();
        ipr.parameters.setString("action", "shoot");
        ipr.parameters.setInteger("angle", 45);

        _es.engine.send(ipr);
}

private function onPluginMessageEvent(e:PluginMessageEvent):void {
        trace("plugin message event received");
        trace(e.parameters.getString("action"));
}
</pre>
 */
@interface EsPluginRequest : EsRequest {
@private
	BOOL pluginName_set_;
	NSString* pluginName_;
	BOOL zoneId_set_;
	int32_t zoneId_;
	BOOL roomId_set_;
	int32_t roomId_;
	BOOL sessionKey_set_;
	int32_t sessionKey_;
	BOOL parameters_set_;
	EsObject* parameters_;
}

/**
 * Name of the plugin. When a plugin instance is creaetd it is given a name. That name needs to be specified here.
 */
@property(retain,nonatomic) NSString* pluginName;
/**
 * If the target plugin is a room-level plugin then specify the zoneId and roomId.
 */
@property(nonatomic) int32_t zoneId;
/**
 * If the target plugin is a room-level plugin then specify the zoneId and roomId.
 */
@property(nonatomic) int32_t roomId;
@property(nonatomic) int32_t sessionKey;
/**
 * Anything that you want to send to the plugin should be set on this EsObject.
 */
@property(retain,nonatomic) EsObject* parameters;

- (id) init;
- (id) initWithThriftObject: (id) thriftObject;
- (void) fromThrift: (id) thriftObject;
- (ThriftPluginRequest*) toThrift;
- (id) newThrift;
@end

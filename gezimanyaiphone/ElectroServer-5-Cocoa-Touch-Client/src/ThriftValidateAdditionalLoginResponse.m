/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


#import "ThriftValidateAdditionalLoginResponse.h"


@implementation ThriftValidateAdditionalLoginResponseConstants
+ (void) initialize {
}
@end

@implementation ThriftValidateAdditionalLoginResponse

- (id) initWithApproved: (BOOL) approved secret: (NSString *) secret
{
  self = [super init];
  __approved = approved;
  __approved_isset = YES;
  __secret = [secret retain];
  __secret_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"approved"])
  {
    __approved = [decoder decodeBoolForKey: @"approved"];
    __approved_isset = YES;
  }
  if ([decoder containsValueForKey: @"secret"])
  {
    __secret = [[decoder decodeObjectForKey: @"secret"] retain];
    __secret_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__approved_isset)
  {
    [encoder encodeBool: __approved forKey: @"approved"];
  }
  if (__secret_isset)
  {
    [encoder encodeObject: __secret forKey: @"secret"];
  }
}

- (void) dealloc
{
  [__secret release];
  [super dealloc];
}

- (BOOL) approved {
  return __approved;
}

- (void) setApproved: (BOOL) approved {
  __approved = approved;
  __approved_isset = YES;
}

- (BOOL) approvedIsSet {
  return __approved_isset;
}

- (void) unsetApproved {
  __approved_isset = NO;
}

- (NSString *) secret {
  return [[__secret retain] autorelease];
}

- (void) setSecret: (NSString *) secret {
  [secret retain];
  [__secret release];
  __secret = secret;
  __secret_isset = YES;
}

- (BOOL) secretIsSet {
  return __secret_isset;
}

- (void) unsetSecret {
  [__secret release];
  __secret = nil;
  __secret_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setApproved: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setSecret: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftValidateAdditionalLoginResponse"];
  if (__approved_isset) {
    [outProtocol writeFieldBeginWithName: @"approved" type: TType_BOOL fieldID: 1];
    [outProtocol writeBool: __approved];
    [outProtocol writeFieldEnd];
  }
  if (__secret_isset) {
    if (__secret != nil) {
      [outProtocol writeFieldBeginWithName: @"secret" type: TType_STRING fieldID: 2];
      [outProtocol writeString: __secret];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftValidateAdditionalLoginResponse("];
  [ms appendString: @"approved:"];
  [ms appendFormat: @"%i", __approved];
  [ms appendString: @",secret:"];
  [ms appendFormat: @"\"%@\"", __secret];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


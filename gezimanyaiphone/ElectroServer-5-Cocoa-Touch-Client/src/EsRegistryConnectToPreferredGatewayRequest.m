//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsRegistryConnectToPreferredGatewayRequest.h>
#import <EsThriftUtil.h>

@implementation EsRegistryConnectToPreferredGatewayRequest

@synthesize zoneId = zoneId_;
@synthesize host = host_;
@synthesize port = port_;
@synthesize protocolToUse = protocolToUse_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_RegistryConnectToPreferredGatewayRequest;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftRegistryConnectToPreferredGatewayRequest* t = (ThriftRegistryConnectToPreferredGatewayRequest*) thriftObject;
	if ([t zoneIdIsSet]) {
		self.zoneId = t.zoneId;
	}
	if ([t hostIsSet] && t.host != nil) {
		self.host = t.host;
	}
	if ([t portIsSet]) {
		self.port = t.port;
	}
	if ([t protocolToUseIsSet]) {
		self.protocolToUse = t.protocolToUse;
	}
}

- (ThriftRegistryConnectToPreferredGatewayRequest*) toThrift {
	ThriftRegistryConnectToPreferredGatewayRequest* _t = [[[ThriftRegistryConnectToPreferredGatewayRequest alloc] init] autorelease];;
	if (zoneId_set_) {
		int32_t _zoneId;
		_zoneId = self.zoneId;
		_t.zoneId = _zoneId;
	}
	if (host_set_ && host_ != nil) {
		NSString* _host;
		_host = self.host;
		_t.host = _host;
	}
	if (port_set_) {
		int32_t _port;
		_port = self.port;
		_t.port = _port;
	}
	if (protocolToUse_set_) {
		int _protocolToUse;
		_protocolToUse = self.protocolToUse;
		_t.protocolToUse = _protocolToUse;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftRegistryConnectToPreferredGatewayRequest alloc] init];
}

- (void) setZoneId: (int32_t) zoneId {
	zoneId_ = zoneId;
	zoneId_set_ = true;
}

- (void) setHost: (NSString*) host {
	[host_ release];
	host_ = [host retain];
	host_set_ = true;
}

- (void) setPort: (int32_t) port {
	port_ = port;
	port_set_ = true;
}

- (void) setProtocolToUse: (int) protocolToUse {
	protocolToUse_ = protocolToUse;
	protocolToUse_set_ = true;
}

- (void) dealloc {
	self.host = nil;
	[super dealloc];
}

@end

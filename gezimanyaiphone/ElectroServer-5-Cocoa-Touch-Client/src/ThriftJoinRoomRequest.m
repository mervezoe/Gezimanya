/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>
#import <TProcessor.h>


#import "ThriftJoinRoomRequest.h"


@implementation ThriftJoinRoomRequestConstants
+ (void) initialize {
}
@end

@implementation ThriftJoinRoomRequest

- (id) initWithZoneName: (NSString *) zoneName roomName: (NSString *) roomName zoneId: (int32_t) zoneId roomId: (int32_t) roomId password: (NSString *) password receivingRoomListUpdates: (BOOL) receivingRoomListUpdates receivingRoomAttributeUpdates: (BOOL) receivingRoomAttributeUpdates receivingUserListUpdates: (BOOL) receivingUserListUpdates receivingUserVariableUpdates: (BOOL) receivingUserVariableUpdates receivingRoomVariableUpdates: (BOOL) receivingRoomVariableUpdates receivingVideoEvents: (BOOL) receivingVideoEvents
{
  self = [super init];
  __zoneName = [zoneName retain];
  __zoneName_isset = YES;
  __roomName = [roomName retain];
  __roomName_isset = YES;
  __zoneId = zoneId;
  __zoneId_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __password = [password retain];
  __password_isset = YES;
  __receivingRoomListUpdates = receivingRoomListUpdates;
  __receivingRoomListUpdates_isset = YES;
  __receivingRoomAttributeUpdates = receivingRoomAttributeUpdates;
  __receivingRoomAttributeUpdates_isset = YES;
  __receivingUserListUpdates = receivingUserListUpdates;
  __receivingUserListUpdates_isset = YES;
  __receivingUserVariableUpdates = receivingUserVariableUpdates;
  __receivingUserVariableUpdates_isset = YES;
  __receivingRoomVariableUpdates = receivingRoomVariableUpdates;
  __receivingRoomVariableUpdates_isset = YES;
  __receivingVideoEvents = receivingVideoEvents;
  __receivingVideoEvents_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"zoneName"])
  {
    __zoneName = [[decoder decodeObjectForKey: @"zoneName"] retain];
    __zoneName_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomName"])
  {
    __roomName = [[decoder decodeObjectForKey: @"roomName"] retain];
    __roomName_isset = YES;
  }
  if ([decoder containsValueForKey: @"zoneId"])
  {
    __zoneId = [decoder decodeInt32ForKey: @"zoneId"];
    __zoneId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"password"])
  {
    __password = [[decoder decodeObjectForKey: @"password"] retain];
    __password_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingRoomListUpdates"])
  {
    __receivingRoomListUpdates = [decoder decodeBoolForKey: @"receivingRoomListUpdates"];
    __receivingRoomListUpdates_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingRoomAttributeUpdates"])
  {
    __receivingRoomAttributeUpdates = [decoder decodeBoolForKey: @"receivingRoomAttributeUpdates"];
    __receivingRoomAttributeUpdates_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingUserListUpdates"])
  {
    __receivingUserListUpdates = [decoder decodeBoolForKey: @"receivingUserListUpdates"];
    __receivingUserListUpdates_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingUserVariableUpdates"])
  {
    __receivingUserVariableUpdates = [decoder decodeBoolForKey: @"receivingUserVariableUpdates"];
    __receivingUserVariableUpdates_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingRoomVariableUpdates"])
  {
    __receivingRoomVariableUpdates = [decoder decodeBoolForKey: @"receivingRoomVariableUpdates"];
    __receivingRoomVariableUpdates_isset = YES;
  }
  if ([decoder containsValueForKey: @"receivingVideoEvents"])
  {
    __receivingVideoEvents = [decoder decodeBoolForKey: @"receivingVideoEvents"];
    __receivingVideoEvents_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__zoneName_isset)
  {
    [encoder encodeObject: __zoneName forKey: @"zoneName"];
  }
  if (__roomName_isset)
  {
    [encoder encodeObject: __roomName forKey: @"roomName"];
  }
  if (__zoneId_isset)
  {
    [encoder encodeInt32: __zoneId forKey: @"zoneId"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__password_isset)
  {
    [encoder encodeObject: __password forKey: @"password"];
  }
  if (__receivingRoomListUpdates_isset)
  {
    [encoder encodeBool: __receivingRoomListUpdates forKey: @"receivingRoomListUpdates"];
  }
  if (__receivingRoomAttributeUpdates_isset)
  {
    [encoder encodeBool: __receivingRoomAttributeUpdates forKey: @"receivingRoomAttributeUpdates"];
  }
  if (__receivingUserListUpdates_isset)
  {
    [encoder encodeBool: __receivingUserListUpdates forKey: @"receivingUserListUpdates"];
  }
  if (__receivingUserVariableUpdates_isset)
  {
    [encoder encodeBool: __receivingUserVariableUpdates forKey: @"receivingUserVariableUpdates"];
  }
  if (__receivingRoomVariableUpdates_isset)
  {
    [encoder encodeBool: __receivingRoomVariableUpdates forKey: @"receivingRoomVariableUpdates"];
  }
  if (__receivingVideoEvents_isset)
  {
    [encoder encodeBool: __receivingVideoEvents forKey: @"receivingVideoEvents"];
  }
}

- (void) dealloc
{
  [__zoneName release];
  [__roomName release];
  [__password release];
  [super dealloc];
}

- (NSString *) zoneName {
  return [[__zoneName retain] autorelease];
}

- (void) setZoneName: (NSString *) zoneName {
  [zoneName retain];
  [__zoneName release];
  __zoneName = zoneName;
  __zoneName_isset = YES;
}

- (BOOL) zoneNameIsSet {
  return __zoneName_isset;
}

- (void) unsetZoneName {
  [__zoneName release];
  __zoneName = nil;
  __zoneName_isset = NO;
}

- (NSString *) roomName {
  return [[__roomName retain] autorelease];
}

- (void) setRoomName: (NSString *) roomName {
  [roomName retain];
  [__roomName release];
  __roomName = roomName;
  __roomName_isset = YES;
}

- (BOOL) roomNameIsSet {
  return __roomName_isset;
}

- (void) unsetRoomName {
  [__roomName release];
  __roomName = nil;
  __roomName_isset = NO;
}

- (int32_t) zoneId {
  return __zoneId;
}

- (void) setZoneId: (int32_t) zoneId {
  __zoneId = zoneId;
  __zoneId_isset = YES;
}

- (BOOL) zoneIdIsSet {
  return __zoneId_isset;
}

- (void) unsetZoneId {
  __zoneId_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (NSString *) password {
  return [[__password retain] autorelease];
}

- (void) setPassword: (NSString *) password {
  [password retain];
  [__password release];
  __password = password;
  __password_isset = YES;
}

- (BOOL) passwordIsSet {
  return __password_isset;
}

- (void) unsetPassword {
  [__password release];
  __password = nil;
  __password_isset = NO;
}

- (BOOL) receivingRoomListUpdates {
  return __receivingRoomListUpdates;
}

- (void) setReceivingRoomListUpdates: (BOOL) receivingRoomListUpdates {
  __receivingRoomListUpdates = receivingRoomListUpdates;
  __receivingRoomListUpdates_isset = YES;
}

- (BOOL) receivingRoomListUpdatesIsSet {
  return __receivingRoomListUpdates_isset;
}

- (void) unsetReceivingRoomListUpdates {
  __receivingRoomListUpdates_isset = NO;
}

- (BOOL) receivingRoomAttributeUpdates {
  return __receivingRoomAttributeUpdates;
}

- (void) setReceivingRoomAttributeUpdates: (BOOL) receivingRoomAttributeUpdates {
  __receivingRoomAttributeUpdates = receivingRoomAttributeUpdates;
  __receivingRoomAttributeUpdates_isset = YES;
}

- (BOOL) receivingRoomAttributeUpdatesIsSet {
  return __receivingRoomAttributeUpdates_isset;
}

- (void) unsetReceivingRoomAttributeUpdates {
  __receivingRoomAttributeUpdates_isset = NO;
}

- (BOOL) receivingUserListUpdates {
  return __receivingUserListUpdates;
}

- (void) setReceivingUserListUpdates: (BOOL) receivingUserListUpdates {
  __receivingUserListUpdates = receivingUserListUpdates;
  __receivingUserListUpdates_isset = YES;
}

- (BOOL) receivingUserListUpdatesIsSet {
  return __receivingUserListUpdates_isset;
}

- (void) unsetReceivingUserListUpdates {
  __receivingUserListUpdates_isset = NO;
}

- (BOOL) receivingUserVariableUpdates {
  return __receivingUserVariableUpdates;
}

- (void) setReceivingUserVariableUpdates: (BOOL) receivingUserVariableUpdates {
  __receivingUserVariableUpdates = receivingUserVariableUpdates;
  __receivingUserVariableUpdates_isset = YES;
}

- (BOOL) receivingUserVariableUpdatesIsSet {
  return __receivingUserVariableUpdates_isset;
}

- (void) unsetReceivingUserVariableUpdates {
  __receivingUserVariableUpdates_isset = NO;
}

- (BOOL) receivingRoomVariableUpdates {
  return __receivingRoomVariableUpdates;
}

- (void) setReceivingRoomVariableUpdates: (BOOL) receivingRoomVariableUpdates {
  __receivingRoomVariableUpdates = receivingRoomVariableUpdates;
  __receivingRoomVariableUpdates_isset = YES;
}

- (BOOL) receivingRoomVariableUpdatesIsSet {
  return __receivingRoomVariableUpdates_isset;
}

- (void) unsetReceivingRoomVariableUpdates {
  __receivingRoomVariableUpdates_isset = NO;
}

- (BOOL) receivingVideoEvents {
  return __receivingVideoEvents;
}

- (void) setReceivingVideoEvents: (BOOL) receivingVideoEvents {
  __receivingVideoEvents = receivingVideoEvents;
  __receivingVideoEvents_isset = YES;
}

- (BOOL) receivingVideoEventsIsSet {
  return __receivingVideoEvents_isset;
}

- (void) unsetReceivingVideoEvents {
  __receivingVideoEvents_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setZoneName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setRoomName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setZoneId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setPassword: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingRoomListUpdates: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingRoomAttributeUpdates: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingUserListUpdates: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 9:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingUserVariableUpdates: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 10:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingRoomVariableUpdates: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 11:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setReceivingVideoEvents: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ThriftJoinRoomRequest"];
  if (__zoneName_isset) {
    if (__zoneName != nil) {
      [outProtocol writeFieldBeginWithName: @"zoneName" type: TType_STRING fieldID: 1];
      [outProtocol writeString: __zoneName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__roomName_isset) {
    if (__roomName != nil) {
      [outProtocol writeFieldBeginWithName: @"roomName" type: TType_STRING fieldID: 2];
      [outProtocol writeString: __roomName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__zoneId_isset) {
    [outProtocol writeFieldBeginWithName: @"zoneId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __zoneId];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 4];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__password_isset) {
    if (__password != nil) {
      [outProtocol writeFieldBeginWithName: @"password" type: TType_STRING fieldID: 5];
      [outProtocol writeString: __password];
      [outProtocol writeFieldEnd];
    }
  }
  if (__receivingRoomListUpdates_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingRoomListUpdates" type: TType_BOOL fieldID: 6];
    [outProtocol writeBool: __receivingRoomListUpdates];
    [outProtocol writeFieldEnd];
  }
  if (__receivingRoomAttributeUpdates_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingRoomAttributeUpdates" type: TType_BOOL fieldID: 7];
    [outProtocol writeBool: __receivingRoomAttributeUpdates];
    [outProtocol writeFieldEnd];
  }
  if (__receivingUserListUpdates_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingUserListUpdates" type: TType_BOOL fieldID: 8];
    [outProtocol writeBool: __receivingUserListUpdates];
    [outProtocol writeFieldEnd];
  }
  if (__receivingUserVariableUpdates_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingUserVariableUpdates" type: TType_BOOL fieldID: 9];
    [outProtocol writeBool: __receivingUserVariableUpdates];
    [outProtocol writeFieldEnd];
  }
  if (__receivingRoomVariableUpdates_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingRoomVariableUpdates" type: TType_BOOL fieldID: 10];
    [outProtocol writeBool: __receivingRoomVariableUpdates];
    [outProtocol writeFieldEnd];
  }
  if (__receivingVideoEvents_isset) {
    [outProtocol writeFieldBeginWithName: @"receivingVideoEvents" type: TType_BOOL fieldID: 11];
    [outProtocol writeBool: __receivingVideoEvents];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ThriftJoinRoomRequest("];
  [ms appendString: @"zoneName:"];
  [ms appendFormat: @"\"%@\"", __zoneName];
  [ms appendString: @",roomName:"];
  [ms appendFormat: @"\"%@\"", __roomName];
  [ms appendString: @",zoneId:"];
  [ms appendFormat: @"%i", __zoneId];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",password:"];
  [ms appendFormat: @"\"%@\"", __password];
  [ms appendString: @",receivingRoomListUpdates:"];
  [ms appendFormat: @"%i", __receivingRoomListUpdates];
  [ms appendString: @",receivingRoomAttributeUpdates:"];
  [ms appendFormat: @"%i", __receivingRoomAttributeUpdates];
  [ms appendString: @",receivingUserListUpdates:"];
  [ms appendFormat: @"%i", __receivingUserListUpdates];
  [ms appendString: @",receivingUserVariableUpdates:"];
  [ms appendFormat: @"%i", __receivingUserVariableUpdates];
  [ms appendString: @",receivingRoomVariableUpdates:"];
  [ms appendFormat: @"%i", __receivingRoomVariableUpdates];
  [ms appendString: @",receivingVideoEvents:"];
  [ms appendFormat: @"%i", __receivingVideoEvents];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


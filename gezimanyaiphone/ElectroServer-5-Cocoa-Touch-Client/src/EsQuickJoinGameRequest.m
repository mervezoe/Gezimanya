//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsQuickJoinGameRequest.h>
#import <EsThriftUtil.h>

@implementation EsQuickJoinGameRequest

@synthesize gameType = gameType_;
@synthesize zoneName = zoneName_;
@synthesize password = password_;
@synthesize locked = locked_;
@synthesize hidden = hidden_;
@synthesize createOnly = createOnly_;
@synthesize gameDetails = gameDetails_;
@synthesize criteria = criteria_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_CreateOrJoinGameRequest;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftQuickJoinGameRequest* t = (ThriftQuickJoinGameRequest*) thriftObject;
	if ([t gameTypeIsSet] && t.gameType != nil) {
		self.gameType = t.gameType;
	}
	if ([t zoneNameIsSet] && t.zoneName != nil) {
		self.zoneName = t.zoneName;
	}
	if ([t passwordIsSet] && t.password != nil) {
		self.password = t.password;
	}
	if ([t lockedIsSet]) {
		self.locked = t.locked;
	}
	if ([t hiddenIsSet]) {
		self.hidden = t.hidden;
	}
	if ([t createOnlyIsSet]) {
		self.createOnly = t.createOnly;
	}
	if ([t gameDetailsIsSet] && t.gameDetails != nil) {
		self.gameDetails = [EsThriftUtil unflattenEsObject:[[[EsFlattenedEsObject alloc] initWithThriftObject:t.gameDetails] autorelease]];
	}
	if ([t criteriaIsSet] && t.criteria != nil) {
		self.criteria = [[[EsSearchCriteria alloc] initWithThriftObject:t.criteria] autorelease];
	}
}

- (ThriftQuickJoinGameRequest*) toThrift {
	ThriftQuickJoinGameRequest* _t = [[[ThriftQuickJoinGameRequest alloc] init] autorelease];;
	if (gameType_set_ && gameType_ != nil) {
		NSString* _gameType;
		_gameType = self.gameType;
		_t.gameType = _gameType;
	}
	if (zoneName_set_ && zoneName_ != nil) {
		NSString* _zoneName;
		_zoneName = self.zoneName;
		_t.zoneName = _zoneName;
	}
	if (password_set_ && password_ != nil) {
		NSString* _password;
		_password = self.password;
		_t.password = _password;
	}
	if (locked_set_) {
		BOOL _locked;
		_locked = self.locked;
		_t.locked = _locked;
	}
	if (hidden_set_) {
		BOOL _hidden;
		_hidden = self.hidden;
		_t.hidden = _hidden;
	}
	if (createOnly_set_) {
		BOOL _createOnly;
		_createOnly = self.createOnly;
		_t.createOnly = _createOnly;
	}
	if (gameDetails_set_ && gameDetails_ != nil) {
		ThriftFlattenedEsObject* _gameDetails;
		_gameDetails = [[EsThriftUtil flattenEsObject:self.gameDetails] toThrift];
		_t.gameDetails = _gameDetails;
	}
	if (criteria_set_ && criteria_ != nil) {
		ThriftSearchCriteria* _criteria;
		_criteria = [self.criteria toThrift];
		_t.criteria = _criteria;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftQuickJoinGameRequest alloc] init];
}

- (void) setGameType: (NSString*) gameType {
	[gameType_ release];
	gameType_ = [gameType retain];
	gameType_set_ = true;
}

- (void) setZoneName: (NSString*) zoneName {
	[zoneName_ release];
	zoneName_ = [zoneName retain];
	zoneName_set_ = true;
}

- (void) setPassword: (NSString*) password {
	[password_ release];
	password_ = [password retain];
	password_set_ = true;
}

- (void) setLocked: (BOOL) locked {
	locked_ = locked;
	locked_set_ = true;
}

- (void) setHidden: (BOOL) hidden {
	hidden_ = hidden;
	hidden_set_ = true;
}

- (void) setCreateOnly: (BOOL) createOnly {
	createOnly_ = createOnly;
	createOnly_set_ = true;
}

- (void) setGameDetails: (EsObject*) gameDetails {
	[gameDetails_ release];
	gameDetails_ = [gameDetails retain];
	gameDetails_set_ = true;
}

- (void) setCriteria: (EsSearchCriteria*) criteria {
	[criteria_ release];
	criteria_ = [criteria retain];
	criteria_set_ = true;
}

- (void) dealloc {
	self.gameType = nil;
	self.zoneName = nil;
	self.password = nil;
	self.gameDetails = nil;
	self.criteria = nil;
	[super dealloc];
}

@end

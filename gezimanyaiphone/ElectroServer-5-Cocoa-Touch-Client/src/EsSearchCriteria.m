//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsSearchCriteria.h>
#import <EsThriftUtil.h>

@implementation EsSearchCriteria

@synthesize gameId = gameId_;
@synthesize locked = locked_;
@synthesize lockedSet = lockedSet_;
@synthesize gameType = gameType_;
@synthesize gameDetails = gameDetails_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.gameId = -1;
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftSearchCriteria* t = (ThriftSearchCriteria*) thriftObject;
	if ([t gameIdIsSet]) {
		self.gameId = t.gameId;
	}
	if ([t lockedIsSet]) {
		self.locked = t.locked;
	}
	if ([t lockedSetIsSet]) {
		self.lockedSet = t.lockedSet;
	}
	if ([t gameTypeIsSet] && t.gameType != nil) {
		self.gameType = t.gameType;
	}
	if ([t gameDetailsIsSet] && t.gameDetails != nil) {
		self.gameDetails = [EsThriftUtil unflattenEsObject:[[[EsFlattenedEsObject alloc] initWithThriftObject:t.gameDetails] autorelease]];
	}
}

- (ThriftSearchCriteria*) toThrift {
	ThriftSearchCriteria* _t = [[[ThriftSearchCriteria alloc] init] autorelease];;
	if (gameId_set_) {
		int32_t _gameId;
		_gameId = self.gameId;
		_t.gameId = _gameId;
	}
	if (locked_set_) {
		BOOL _locked;
		_locked = self.locked;
		_t.locked = _locked;
	}
	if (lockedSet_set_) {
		BOOL _lockedSet;
		_lockedSet = self.lockedSet;
		_t.lockedSet = _lockedSet;
	}
	if (gameType_set_ && gameType_ != nil) {
		NSString* _gameType;
		_gameType = self.gameType;
		_t.gameType = _gameType;
	}
	if (gameDetails_set_ && gameDetails_ != nil) {
		ThriftFlattenedEsObject* _gameDetails;
		_gameDetails = [[EsThriftUtil flattenEsObject:self.gameDetails] toThrift];
		_t.gameDetails = _gameDetails;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftSearchCriteria alloc] init];
}

- (void) setGameId: (int32_t) gameId {
	gameId_ = gameId;
	gameId_set_ = true;
}

- (void) setLocked: (BOOL) locked {
	locked_ = locked;
	locked_set_ = true;
}

- (void) setLockedSet: (BOOL) lockedSet {
	lockedSet_ = lockedSet;
	lockedSet_set_ = true;
}

- (void) setGameType: (NSString*) gameType {
	[gameType_ release];
	gameType_ = [gameType retain];
	gameType_set_ = true;
}

- (void) setGameDetails: (EsObject*) gameDetails {
	[gameDetails_ release];
	gameDetails_ = [gameDetails retain];
	gameDetails_set_ = true;
}

- (void) dealloc {
	self.gameType = nil;
	self.gameDetails = nil;
	[super dealloc];
}

@end

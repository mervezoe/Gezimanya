//
//  Autogenerated by CocoaTouchApiGenerator
//
//  DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//



#import <EsLoginRequest.h>
#import <EsThriftUtil.h>

@implementation EsLoginRequest

@synthesize userName = userName_;
@synthesize password = password_;
@synthesize sharedSecret = sharedSecret_;
@synthesize esObject = esObject_;
@synthesize userVariables = userVariables_;
@synthesize protocol = protocol_;
@synthesize hashId = hashId_;
@synthesize clientVersion = clientVersion_;
@synthesize clientType = clientType_;

- (id) initWithThriftObject: (id) thriftObject {
	if ((self = [super init])) {
		self.messageType = EsMessageType_LoginRequest;
		self.userVariables = [NSMutableDictionary dictionary];
		if (thriftObject != nil) {
			[self fromThrift: thriftObject];
		}
	}
	return self;
}

- (id) init {
	return [self initWithThriftObject: nil];
}

- (void) fromThrift: (id) thriftObject {
	ThriftLoginRequest* t = (ThriftLoginRequest*) thriftObject;
	if ([t userNameIsSet] && t.userName != nil) {
		self.userName = t.userName;
	}
	if ([t passwordIsSet] && t.password != nil) {
		self.password = t.password;
	}
	if ([t sharedSecretIsSet] && t.sharedSecret != nil) {
		self.sharedSecret = t.sharedSecret;
	}
	if ([t esObjectIsSet] && t.esObject != nil) {
		self.esObject = [EsThriftUtil unflattenEsObjectRO:[[[EsFlattenedEsObjectRO alloc] initWithThriftObject:t.esObject] autorelease]];
	}
	if ([t userVariablesIsSet] && t.userVariables != nil) {
		self.userVariables = [[[NSMutableDictionary alloc] init] autorelease];
		for (NSString* _tKeyVar_0 in t.userVariables) {
			ThriftFlattenedEsObject* _tValVar_0 = [t.userVariables objectForKey:_tKeyVar_0];
			NSString* _keyVar_0;
			_keyVar_0 = _tKeyVar_0;
			EsObject* _valVar_0;
			_valVar_0 = [EsThriftUtil unflattenEsObject:[[[EsFlattenedEsObject alloc] initWithThriftObject:_tValVar_0] autorelease]];
			[self.userVariables setObject:_valVar_0 forKey:_keyVar_0];
		}
	}
	if ([t protocolIsSet]) {
		self.protocol = t.protocol;
	}
	if ([t hashIdIsSet]) {
		self.hashId = t.hashId;
	}
	if ([t clientVersionIsSet] && t.clientVersion != nil) {
		self.clientVersion = t.clientVersion;
	}
	if ([t clientTypeIsSet] && t.clientType != nil) {
		self.clientType = t.clientType;
	}
}

- (ThriftLoginRequest*) toThrift {
	ThriftLoginRequest* _t = [[[ThriftLoginRequest alloc] init] autorelease];;
	if (userName_set_ && userName_ != nil) {
		NSString* _userName;
		_userName = self.userName;
		_t.userName = _userName;
	}
	if (password_set_ && password_ != nil) {
		NSString* _password;
		_password = self.password;
		_t.password = _password;
	}
	if (sharedSecret_set_ && sharedSecret_ != nil) {
		NSString* _sharedSecret;
		_sharedSecret = self.sharedSecret;
		_t.sharedSecret = _sharedSecret;
	}
	if (esObject_set_ && esObject_ != nil) {
		ThriftFlattenedEsObjectRO* _esObject;
		_esObject = [[EsThriftUtil flattenEsObjectRO:self.esObject] toThrift];
		_t.esObject = _esObject;
	}
	if (userVariables_set_ && userVariables_ != nil) {
		NSMutableDictionary* _userVariables;
		_userVariables = [[[NSMutableDictionary alloc] init] autorelease];
		for (NSString* _tKeyVar_0 in self.userVariables) {
			EsObject* _tValVar_0 = [self.userVariables objectForKey:_tKeyVar_0];
			NSString* _keyVar_0;
			_keyVar_0 = _tKeyVar_0;
			ThriftFlattenedEsObject* _valVar_0;
			_valVar_0 = [[EsThriftUtil flattenEsObject:_tValVar_0] toThrift];
			[_userVariables setObject:_valVar_0 forKey:_keyVar_0];
		}
		_t.userVariables = _userVariables;
	}
	if (protocol_set_) {
		int _protocol;
		_protocol = self.protocol;
		_t.protocol = _protocol;
	}
	if (hashId_set_) {
		int32_t _hashId;
		_hashId = self.hashId;
		_t.hashId = _hashId;
	}
	if (clientVersion_set_ && clientVersion_ != nil) {
		NSString* _clientVersion;
		_clientVersion = self.clientVersion;
		_t.clientVersion = _clientVersion;
	}
	if (clientType_set_ && clientType_ != nil) {
		NSString* _clientType;
		_clientType = self.clientType;
		_t.clientType = _clientType;
	}
	return _t;
}

- (id) newThrift {
	return [[ThriftLoginRequest alloc] init];
}

- (void) setUserName: (NSString*) userName {
	[userName_ release];
	userName_ = [userName retain];
	userName_set_ = true;
}

- (void) setPassword: (NSString*) password {
	[password_ release];
	password_ = [password retain];
	password_set_ = true;
}

- (void) setSharedSecret: (NSString*) sharedSecret {
	[sharedSecret_ release];
	sharedSecret_ = [sharedSecret retain];
	sharedSecret_set_ = true;
}

- (void) setEsObject: (EsObject*) esObject {
	[esObject_ release];
	esObject_ = [esObject retain];
	esObject_set_ = true;
}

- (void) setUserVariables: (NSMutableDictionary*) userVariables {
	[userVariables_ release];
	userVariables_ = [userVariables retain];
	userVariables_set_ = true;
}

- (void) setProtocol: (int) protocol {
	protocol_ = protocol;
	protocol_set_ = true;
}

- (void) setHashId: (int32_t) hashId {
	hashId_ = hashId;
	hashId_set_ = true;
}

- (void) setClientVersion: (NSString*) clientVersion {
	[clientVersion_ release];
	clientVersion_ = [clientVersion retain];
	clientVersion_set_ = true;
}

- (void) setClientType: (NSString*) clientType {
	[clientType_ release];
	clientType_ = [clientType retain];
	clientType_set_ = true;
}

- (void) dealloc {
	self.userName = nil;
	self.password = nil;
	self.sharedSecret = nil;
	self.esObject = nil;
	self.userVariables = nil;
	self.clientVersion = nil;
	self.clientType = nil;
	[super dealloc];
}

@end
